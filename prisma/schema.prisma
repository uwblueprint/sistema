generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Absence {
  id                  Int      @id @default(autoincrement())
  lessonDate          DateTime
  lessonPlan          String?
  reasonOfAbsence     String
  notes               String?
  roomNumber          String?
  absentTeacherId     Int
  substituteTeacherId Int?
  locationId          Int
  subjectId           Int
  absentTeacher       User     @relation("absentTeacher", fields: [absentTeacherId], references: [id])
  substituteTeacher   User?    @relation("substituteTeacher", fields: [substituteTeacherId], references: [id])
  location            Location @relation(fields: [locationId], references: [id])
  subject             Subject  @relation(fields: [subjectId], references: [id])
}

model User {
  id           Int                   @id @default(autoincrement())
  authId       String                @unique
  email        String                @unique
  firstName    String
  lastName     String
  role         Role                  @default(TEACHER)
  status       Status                @default(INVITED)
  absences     Absence[]             @relation("absentTeacher")
  substitutes  Absence[]             @relation("substituteTeacher")
  mailingLists UsersOnMailingLists[]
}

model Location {
  id           Int       @id @default(autoincrement())
  name         String
  abbreviation String
  Absence      Absence[]
}

model MailingList {
  id     Int                   @id @default(autoincrement())
  name   String
  emails String[]
  users  UsersOnMailingLists[]
}

model UsersOnMailingLists {
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  mailingList   MailingList @relation(fields: [mailingListId], references: [id])
  mailingListId Int

  @@id([userId, mailingListId])
}

model Subject {
  id           Int        @id @default(autoincrement())
  name         String
  abbreviation String
  Absence      Absence[]
  colorGroupId Int
  colorGroup   ColorGroup @relation(fields: [colorGroupId], references: [id])
}

model ColorGroup {
  id         Int       @id @default(autoincrement())
  name       String
  colorCodes String[]
  Subject    Subject[]
}

model GlobalSettings {
  id         Int @id @default(autoincrement())
  absenceCap Int @default(10)
}

enum Role {
  TEACHER
  ADMIN
}

enum Status {
  ACTIVE
  INVITED
  DEACTIVATED
}
