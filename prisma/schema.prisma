generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Absence {
  id                  Int      @id @default(autoincrement())
  lessonDate          DateTime
  lessonPlan          String?
  reasonOfAbsence     String
  notes               String?
  roomNumber          String?
  absentTeacherId     Int
  substituteTeacherId Int?
  locationId          Int
  subjectId           Int
  absentTeacher       User     @relation("absentTeacher", fields: [absentTeacherId], references: [id])
  substituteTeacher   User?    @relation("substituteTeacher", fields: [substituteTeacherId], references: [id])
  location            Location @relation(fields: [locationId], references: [id])
  subject             Subject  @relation(fields: [subjectId], references: [id])
}

model User {
  id             Int           @id @default(autoincrement())
  authId         String        @unique
  email          String        @unique
  firstName      String
  lastName       String
  profilePicture String?
  role           Role          @default(TEACHER)
  absences       Absence[]     @relation("absentTeacher")
  substitutes    Absence[]     @relation("substituteTeacher")
  subjects       Subject[]     @relation("MailingLists")
  mailingLists   MailingList[]
}

model Location {
  id           Int       @id @default(autoincrement())
  name         String
  abbreviation String
  archived     Boolean   @default(false)
  Absence      Absence[]
}

model MailingList {
  userId    Int
  subjectId Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  subject   Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)

  @@id([userId, subjectId])
  @@map("MailingList")
}

model Subject {
  id           Int           @id @default(autoincrement())
  name         String
  abbreviation String
  archived     Boolean    @default(false)
  Absence      Absence[]
  colorGroupId Int
  colorGroup   ColorGroup    @relation(fields: [colorGroupId], references: [id])
  users        User[]        @relation("MailingLists")
  userSubjects MailingList[]
}

model ColorGroup {
  id         Int       @id @default(autoincrement())
  name       String
  colorCodes String[]
  Subject    Subject[]
}

model GlobalSettings {
  id         Int @id @default(autoincrement())
  absenceCap Int @default(10)
}

enum Role {
  TEACHER
  ADMIN
}
